{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","_ref","toDo","done","react_default","a","createElement","className","SearchPanel","state","term","onSearchChange","e","target","value","_this","setState","props","type","placeholder","this","onChange","React","Component","TodoListItem","_this$props","label","onDeleted","onToggleImportant","onToggleDone","classNames","important","onClick","TodoList","todos","elements","map","item","id","itemProps","Object","objectWithoutProperties","key","components_todo_list_item","assign","ItemStatusFilter","buttons","name","filter","onFilterChange","classes","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","concat","toConsumableArray","slice","addItem","text","newItem","_ref2","toggleProperty","arr","propName","oldItem","objectSpread","defineProperty","_ref3","_ref4","search","items","length","toLowerCase","indexOf","_this$state","visibleItems","doneCount","todoCount","components_app_header","components_search_panel","components_item_status_filter","components_todo_list","components_item_add_form","ReactDOM","render","components_app","document","getElementById"],"mappings":"iXAEeA,SCCG,SAAAC,GAAkB,IAAhBC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,KACxB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,UAAKJ,EAAL,gBAAwBC,EAAxB,YCLSK,oNCGXC,MAAQ,CACJC,KAAM,MAGVC,eAAiB,SAACC,GACd,IAAMF,EAAOE,EAAEC,OAAOC,MACtBC,EAAKC,SAAS,CAAEN,SAChBK,EAAKE,MAAMN,eAAeD,4EAI1B,OACIN,EAAAC,EAAAC,cAAA,SAAOY,KAAK,OACZX,UAAU,4BACVY,YAAY,SACZL,MAAOM,KAAKX,MAAMC,KAClBW,SAAUD,KAAKT,wBAlBcW,IAAMC,oBCDhCC,0LCIF,IAAAC,EAIeL,KAAKH,MAHjBS,EADHD,EACGC,MAAOC,EADVF,EACUE,UACfC,EAFKH,EAELG,kBACAC,EAHKJ,EAGLI,aAGIC,EAAa,iBASjB,OAfKL,EAILtB,OAII2B,GAAc,SARbL,EAICM,YAQFD,GAAc,cAId1B,EAAAC,EAAAC,cAAA,QAAMC,UAAWuB,GACb1B,EAAAC,EAAAC,cAAA,QACAC,UAAU,uBACVyB,QAASH,GACJH,GAGLtB,EAAAC,EAAAC,cAAA,UAAQY,KAAK,SAASX,UAAU,6CAA6CyB,QAASJ,GAClFxB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAGjBH,EAAAC,EAAAC,cAAA,UAAQY,KAAK,SAASX,UAAU,4CAA4CyB,QAASL,GACjFvB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BA9BNe,IAAMC,YCFlBU,SCGE,SAAAhC,GAEsB,IAFnBiC,EAEmBjC,EAFnBiC,MAAOP,EAEY1B,EAFZ0B,UACPC,EACmB3B,EADnB2B,kBACAC,EAAmB5B,EAAnB4B,aAEZM,EAAWD,EAAME,IAAI,SAACC,GAAS,IAC3BC,EAAqBD,EAArBC,GAAOC,EADoBC,OAAAC,EAAA,EAAAD,CACNH,EADM,QAGnC,OACEjC,EAAAC,EAAAC,cAAA,MAAIoC,IAAKJ,EAAI/B,UAAU,mBACrBH,EAAAC,EAAAC,cAACqC,EAADH,OAAAI,OAAA,GACIL,EADJ,CAEAZ,UAAW,kBAAMA,EAAUW,IAC3BV,kBAAmB,kBAAMA,EAAkBU,IAC3CT,aAAc,kBAAMA,EAAaS,UAKvC,OACElC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wBACV4B,KCvBOU,oNCIXC,QAAU,CACN,CAAEC,KAAM,MAAOrB,MAAO,OACtB,CAAEqB,KAAM,SAAUrB,MAAO,UACzB,CAAEqB,KAAM,OAAQrB,MAAO,iFAGlB,IAAAD,EAE8BL,KAAKH,MAAhC+B,EAFHvB,EAEGuB,OAAQC,EAFXxB,EAEWwB,eAEVH,EAAU1B,KAAK0B,QAAQV,IAAI,SAAAnC,GAAqB,IAAlB8C,EAAkB9C,EAAlB8C,KAAMrB,EAAYzB,EAAZyB,MAEhCwB,EADWF,IAAWD,EACD,eAAiB,4BAC5C,OAAO3C,EAAAC,EAAAC,cAAA,UACHY,KAAK,SACLX,UAAW2C,EACXR,IAAKK,EACLf,QAAS,kBAAMiB,EAAeF,KAC7BrB,KAIT,OACItB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVuC,UA1B6BxB,IAAMC,YCFrC4B,oNCGX1C,MAAQ,CACJiB,MAAO,MAGX0B,cAAgB,SAACxC,GACbG,EAAKC,SAAS,CACVU,MAAOd,EAAEC,OAAOC,WAIxBuC,SAAW,SAACzC,GACRA,EAAE0C,iBACFvC,EAAKE,MAAMsC,YAAYxC,EAAKN,MAAMiB,OAClCX,EAAKC,SAAS,CACVU,MAAO,8EAKX,OACItB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uBACZ8C,SAAUjC,KAAKiC,UACfjD,EAAAC,EAAAC,cAAA,SACIY,KAAK,OACLX,UAAU,eACVc,SAAUD,KAAKgC,cACfjC,YAAY,wBACZL,MAAOM,KAAKX,MAAMiB,QACtBtB,EAAAC,EAAAC,cAAA,UACIC,UAAU,6BADd,oBA9ByBgB,cCD1BiC,oNCUXC,MAAQ,MAERhD,MAAQ,CACJiD,SAAU,CACN3C,EAAK4C,eAAe,gBACpB5C,EAAK4C,eAAe,oBACpB5C,EAAK4C,eAAe,iBAExBjD,KAAM,GACNsC,OAAQ,SAYZY,WAAa,SAACtB,GACVvB,EAAKC,SAAS,SAAAf,GAAgB,IAAdyD,EAAczD,EAAdyD,SACNG,EAAMH,EAASI,UAAU,SAACC,GAAD,OAAQA,EAAGzB,KAAOA,IAMjD,MAAO,CAACoB,SALM,GAAAM,OAAAxB,OAAAyB,EAAA,EAAAzB,CACPkB,EAASQ,MAAM,EAAGL,IADXrB,OAAAyB,EAAA,EAAAzB,CAEPkB,EAASQ,MAAML,EAAM,WAOpCM,QAAU,SAACC,GAEP,IAAMC,EAAUtD,EAAK4C,eAAeS,GAGpCrD,EAAKC,SAAS,SAAAsD,GAAgB,IAAdZ,EAAcY,EAAdZ,SAMZ,MAAO,CAAEA,SALK,GAAAM,OAAAxB,OAAAyB,EAAA,EAAAzB,CACPkB,GADO,CAEVW,UAOZE,eAAiB,SAACC,EAAKlC,EAAImC,GACvB,IAAMZ,EAAMW,EAAIV,UAAU,SAACC,GAAD,OAAQA,EAAGzB,KAAOA,IAGtCoC,EAAUF,EAAIX,GACdQ,EAAO7B,OAAAmC,EAAA,EAAAnC,CAAA,GAAQkC,EAARlC,OAAAoC,EAAA,EAAApC,CAAA,GAAkBiC,GAAYC,EAAQD,KAEnD,SAAAT,OAAAxB,OAAAyB,EAAA,EAAAzB,CACOgC,EAAIN,MAAM,EAAGL,IADpB,CAEIQ,GAFJ7B,OAAAyB,EAAA,EAAAzB,CAGOgC,EAAIN,MAAML,EAAM,QAI3BjC,kBAAoB,SAACU,GACjBvB,EAAKC,SAAS,SAAA6D,GAAkB,IAAfnB,EAAemB,EAAfnB,SAEb,MAAO,CAAEA,SAAU3C,EAAKwD,eAAeb,EAAUpB,EAAI,mBAI7DT,aAAe,SAACS,GACZvB,EAAKC,SAAS,SAAA8D,GAAkB,IAAfpB,EAAeoB,EAAfpB,SAEb,MAAO,CAAEA,SAAU3C,EAAKwD,eAAeb,EAAUpB,EAAI,cAI7D3B,eAAiB,SAACD,GACdK,EAAKC,SAAS,CAAEN,YAGpBuC,eAAiB,SAACD,GACdjC,EAAKC,SAAS,CAAEgC,cAGpB+B,OAAS,SAACC,EAAOtE,GACb,OAAoB,IAAhBA,EAAKuE,OAAqBD,EACvBA,EAAMhC,OAAO,SAACX,GACb,OAAOA,EAAKX,MACXwD,cACAC,QAAQzE,EAAKwE,gBAAkB,mFA7E7BxD,GACX,MAAO,CACHA,MAAOA,EACPK,WAAW,EACX5B,MAAM,EACNmC,GAAIlB,KAAKqC,OAAS,kCA4EnBuB,EAAOhC,GACV,MAAe,WAAXA,EACOgC,EAAMhC,OAAO,SAACX,GAAD,OAAWA,EAAKlC,OAClB,SAAX6C,EACAgC,EAAMhC,OAAO,SAACX,GAAD,OAAUA,EAAKlC,OAGhC6E,mCAGF,IAAAI,EAC8BhE,KAAKX,MAAhCiD,EADH0B,EACG1B,SAAUhD,EADb0E,EACa1E,KAAMsC,EADnBoC,EACmBpC,OAElBqC,EAAejE,KAAK4B,OACtB5B,KAAK2D,OAAOrB,EAAUhD,GAAOsC,GAC3BsC,EAAY5B,EAASV,OAAO,SAACe,GAAD,OAAQA,EAAG5D,OAAM8E,OAC7CM,EAAY7B,EAASuB,OAASK,EAEpC,OACIlF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAACkF,EAAD,CAAWtF,KAAMqF,EAAWpF,KAAMmF,IAClClF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAACmF,EAAD,CACC9E,eAAgBS,KAAKT,iBACtBP,EAAAC,EAAAC,cAACoF,EAAD,CACI1C,OAAQA,EACRC,eAAgB7B,KAAK6B,kBAG7B7C,EAAAC,EAAAC,cAACqF,EAAD,CACAzD,MAAOmD,EACP1D,UAAWP,KAAKwC,WAChBhC,kBAAmBR,KAAKQ,kBACxBC,aAAcT,KAAKS,eAEnBzB,EAAAC,EAAAC,cAACsF,EAAD,CAAarC,YAAanC,KAAK+C,kBAlId5C,cCLjCsE,IAASC,OAAO1F,EAAAC,EAAAC,cAACyF,EAAD,MACdC,SAASC,eAAe","file":"static/js/main.5d773ee0.chunk.js","sourcesContent":["import AppHeader from './app-header.js';\n\nexport default AppHeader;\n","import React from 'react';\nimport './app-header.css';\n\nconst AppHeader = ({toDo, done}) => {\n  return (\n    <div className=\"app-header d-flex\">\n      <h1>Todo List</h1>\n      <h2>{toDo} more to do, {done} done</h2>\n    </div>\n  );\n};\n\nexport default AppHeader;\n","import SearchPanel from './search-panel.js';\n\nexport default SearchPanel;\n","import React from 'react';\nimport './search-panel.css';\n\nexport default class SearchPanel extends React.Component {\n\n    state = {\n        term: '',\n    };\n\n    onSearchChange = (e) => {\n        const term = e.target.value;\n        this.setState({ term });\n        this.props.onSearchChange(term);\n    };\n\n    render() {\n        return (\n            <input type=\"text\"\n            className=\"form-control search-input\"\n            placeholder=\"search\"\n            value={this.state.term}\n            onChange={this.onSearchChange} />\n        );\n    }\n}\n","import TodoListItem from './todo-list-item.js';\n\nexport default TodoListItem;\n","import React from 'react';\n\nimport './todo-list-item.css';\n\nclass TodoListItem extends React.Component {\n\n    render() {\n        const { label, onDeleted,\n        onToggleImportant,\n        onToggleDone,\n        done, important } = this.props;\n\n        let classNames = 'todo-list-item';\n        if (done) {\n            classNames += ' done';\n        }\n\n        if (important) {\n            classNames += ' important';\n        }\n\n        return (\n            <span className={classNames}>\n                <span\n                className=\"todo-list-item-label\"\n                onClick={onToggleDone}>\n                    {label}\n                </span>\n\n                <button type=\"button\" className=\"btn btn-outline-success btn-sm float-right\" onClick={onToggleImportant}>\n                    <i className=\"fa fa-exclamation\"/>\n                </button>\n\n                <button type=\"button\" className=\"btn btn-outline-danger btn-sm float-right\" onClick={onDeleted}>\n                    <i className=\"fa fa-trash-o\"/>\n                </button>\n            </span>\n        );\n    };\n}\n\nexport default TodoListItem;\n","import TodoList from './todo-list.js';\n\nexport default TodoList;\n","import React from 'react';\n\nimport TodoListItem from '../todo-list-item/';\nimport './todo-list.css';\n\nconst TodoList = ({ todos, onDeleted,\n                    onToggleImportant,\n                    onToggleDone }) => {\n\n  const elements = todos.map((item) => {\n    const { id, ...itemProps } = item;\n\n    return (\n      <li key={id} className=\"list-group-item\">\n        <TodoListItem\n        {...itemProps }\n        onDeleted={() => onDeleted(id)}\n        onToggleImportant={() => onToggleImportant(id)}\n        onToggleDone={() => onToggleDone(id)}/>\n      </li>\n    );\n  });\n\n  return (\n    <ul className=\"list-group todo-list\">\n      { elements }\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import ItemStatusFilter from './item-status-filter.js';\n\nexport default ItemStatusFilter;\n","import React from 'react';\n\nimport './item-status-filter.css';\n\nexport default class ItemStatusFilter extends React.Component {\n\n    buttons = [\n        { name: 'all', label: 'All'},\n        { name: 'active', label: 'Active'},\n        { name: 'done', label: 'Done'},\n    ];\n\n    render() {\n\n        const { filter, onFilterChange } = this.props;\n\n        const buttons = this.buttons.map(({ name, label }) => {\n            const isActive = filter === name;\n            const classes = isActive ? 'btn btn-info' : 'btn btn-outline-secondary'\n            return <button\n                type=\"button\"\n                className={classes}\n                key={name}\n                onClick={() => onFilterChange(name)}>\n                {label}\n                </button>;\n        });\n\n        return (\n            <div className=\"btn-group\">\n                {buttons}\n            </div>\n        );\n    };\n}\n","import ItemAddForm from './item-add-form.js';\n\nexport default ItemAddForm;\n","import React, {Component} from 'react';\nimport './item-add-form.css';\n\nexport default class ItemAddForm extends Component {\n\n    state = {\n        label: '',\n    };\n\n    onLabelChange = (e) => {\n        this.setState({\n            label: e.target.value,\n        });\n    };\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.onItemAdded(this.state.label);\n        this.setState({\n            label: '',\n        });\n    }\n\n    render() {\n        return (\n            <form className=\"item-add-form d-flex\"\n                onSubmit={this.onSubmit}>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    onChange={this.onLabelChange}\n                    placeholder=\"What needs to be done\"\n                    value={this.state.label}/>\n                <button\n                    className=\"btn btn-outline-secondary\">\n                    Add item\n                </button>\n            </form>\n        );\n    }\n}\n","import App from './app.js';\n\nexport default App;\n","import React, {Component} from 'react';\n\nimport AppHeader from '../app-header/';\nimport SearchPanel from '../search-panel/';\nimport TodoList from '../todo-list/';\nimport ItemStatusFilter from '../item-status-filter/';\nimport ItemAddForm from '../item-add-form/';\n\nimport './app.css';\n\nexport default class App extends Component {\n\n    maxId = 100;\n\n    state = {\n        todoData: [\n            this.createTodoItem('Drink Coffee'),\n            this.createTodoItem('Make Awesome App'),\n            this.createTodoItem('Have a lunch'),\n        ],\n        term: '',\n        filter: 'all',\n    };\n\n    createTodoItem(label) {\n        return {\n            label: label,\n            important: false,\n            done: false,\n            id: this.maxId += 1,\n        }\n    }\n\n    deleteItem = (id) => {\n        this.setState(({todoData}) => {\n            const idx = todoData.findIndex((el) => el.id === id);\n            const newArray = [\n                ...todoData.slice(0, idx),\n                ...todoData.slice(idx + 1)\n            ];\n\n            return {todoData: newArray};\n        });\n    }\n\n    addItem = (text) => {\n        // generate id ?\n        const newItem = this.createTodoItem(text);\n\n        // add element in array\n        this.setState(({todoData}) => {\n            const newArray = [\n                ...todoData,\n                newItem,\n            ];\n\n            return { todoData: newArray };\n        });\n    };\n\n    toggleProperty = (arr, id, propName) => {\n        const idx = arr.findIndex((el) => el.id === id);\n\n        // 1. update object\n        const oldItem = arr[idx];\n        const newItem = { ...oldItem, [propName]: !oldItem[propName] };\n        // 2. construct new array\n        return [\n            ...arr.slice(0, idx),\n            newItem,\n            ...arr.slice(idx + 1),\n        ];\n    };\n\n    onToggleImportant = (id) => {\n        this.setState(({ todoData }) => {\n\n            return { todoData: this.toggleProperty(todoData, id, 'important') };\n        });\n    };\n\n    onToggleDone = (id) => {\n        this.setState(({ todoData }) => {\n\n            return { todoData: this.toggleProperty(todoData, id, 'done') };\n        });\n    };\n\n    onSearchChange = (term) => {\n        this.setState({ term });\n    };\n\n    onFilterChange = (filter) => {\n        this.setState({ filter });\n    };\n\n    search = (items, term) => {\n        if (term.length === 0) return items;\n        return items.filter((item) => {\n                return item.label\n                .toLowerCase()\n                .indexOf(term.toLowerCase()) > -1;\n            });\n    };\n\n    filter(items, filter) {\n        if (filter === 'active') {\n            return items.filter((item) => !item.done);\n        } else if (filter === 'done') {\n            return items.filter((item) => item.done);\n        }\n\n        return items;\n    };\n\n    render() {\n        const { todoData, term, filter } = this.state;\n\n        const visibleItems = this.filter(\n            this.search(todoData, term), filter);\n        const doneCount = todoData.filter((el) => el.done).length;\n        const todoCount = todoData.length - doneCount;\n\n        return (\n            <div className=\"todo-app\">\n                <AppHeader toDo={todoCount} done={doneCount}/>\n                <div className=\"top-panel d-flex\">\n                    <SearchPanel\n                     onSearchChange={this.onSearchChange} />\n                    <ItemStatusFilter\n                        filter={filter}\n                        onFilterChange={this.onFilterChange} />\n                </div>\n\n                <TodoList\n                todos={visibleItems}\n                onDeleted={this.deleteItem}\n                onToggleImportant={this.onToggleImportant}\n                onToggleDone={this.onToggleDone}/>\n\n                <ItemAddForm onItemAdded={this.addItem}/>\n            </div>\n        );\n    };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app/'\n\nReactDOM.render(<App />,\n  document.getElementById('root'));\n"],"sourceRoot":""}